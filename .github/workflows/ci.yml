name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]
        node-version: [18]
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        shell: bash

      - name: Run Python tests
        run: |
          pytest -q || (ret=$?; if [ $ret -eq 5 ]; then exit 0; else exit $ret; fi)
        shell: bash

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Node dependencies
        run: |
          if [ -f web/package.json ]; then npm ci; fi
        shell: bash

      - name: Run Node tests
        run: |
          if [ -f web/package.json ]; then npm test; fi
        shell: bash
  deploy:
    name: Deploy to Render
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Trigger API service deploy
        run: |
          curl -X POST https://api.render.com/v1/services/${{ secrets.RENDER_API_SERVICE_ID }}/deploys \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{"clearCache": true}'
      - name: Trigger Web service deploy
        run: |
          curl -X POST https://api.render.com/v1/services/${{ secrets.RENDER_WEB_SERVICE_ID }}/deploys \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{"clearCache": true}'